---
# tasks file for vce_deploy_ova
- name: get ip for "{{ inventory_hostname }}"
  set_fact:
    eth0_ip: "{{ lookup('dig', inventory_hostname) | ansible.utils.ipaddr }}"

- name: abort if ip address could not be found for host "{{ inventory_hostname }}"
  fail:
    msg: "An IP could not be found for the system, got result: {{ inventory_hostname }}"
  when: ( not eth0_ip )


# https://docs.vmware.com/en/VMware-Cloud-Director/10.4/VMware-Cloud-Director-Install-Configure-Upgrade-Guide/GUID-2B34775B-7C96-44F2-A9A3-D6A9D3B0CAD2.html
- name: Deploy "{{ inventory_hostname }}"
  command: 
    argv:
      - ovftool
      - "--noSSLVerify"
      - "--acceptAllEulas"
      - "--X:enableHiddenProperties"
      - "--datastore={{ vce.deployment.datastore }}"
      - "--allowExtraConfig"
      - "--net:Network 1={{ vce.deployment.eth0.network }}"
      - "--name={{ inventory_hostname }}"
      - "--vmFolder={{ vce.deployment.folder }}"
      - "--diskMode=thin"
      - "--prop:guestinfo.cis.appliance.net.addr.family=ipv4"
      - "--prop:guestinfo.cis.appliance.net.mode=static" 
      - "--prop:guestinfo.cis.appliance.net.addr={{ eth0_ip }}" 
      - "--prop:guestinfo.cis.appliance.net.prefix={{ vce.deployment.eth0.netmask }}" 
      - "--prop:guestinfo.cis.appliance.net.gateway={{ vce.deployment.gateway }}" 
      - "--prop:guestinfo.cis.appliance.net.dns.servers={{ vce.deployment.dns }}" 
      - "--prop:guestinfo.cis.appliance.net.pnid={{ inventory_hostname }}" 
      - "--prop:guestinfo.cis.vmdir.username={{ vce.deployment.sso.username | default('administrator@vsphere.local') }}" 
      - "--prop:guestinfo.cis.vmdir.password={{ vce.deployment.sso.password }}" 
      - "--prop:guestinfo.cis.vmdir.domain-name={{ vce.deployment.sso.domain | default('vsphere.local') }}" 
      - "--prop:guestinfo.cis.vmdir.site-name={{ vce.deployment.sso.sitename | default('Default-First-Site') }}" 
      - "--prop:guestinfo.cis.vmdir.first-instance={{ vce.deployment.sso.firstsite | default(true) }}" 
      - "--prop:guestinfo.cis.appliance.root.passwd={{ vce.root_password }}" 
      - "--prop:guestinfo.cis.appliance.ssh.enabled={{ vce.deployment.enable_ssh }}" 
      - "--prop:guestinfo.cis.appliance.ntp.servers={{ vce.deployment.ntp_server }}" 
      - "--prop:guestinfo.cis.deployment.autoconfig={{ vce.deployment.autoconfig | default(true) }}" 
      - "--deploymentOption={{ vce.deployment.deployment_option }}" 
      - "--powerOn"
      - "{{ vce.deployment.ova }}" 
      - "vi://{{ vce.deployment.vce.username }}:{{ vce.deployment.vce.password }}@{{ vce.deployment.vce.hostname }}/{{ vce.deployment.datacenter }}/host/{{ vce.deployment.cluster }}"
  ignore_errors: true
  args:
    chdir: "{{ vce.deployment.chdir }}"
  delegate_to: "{{ vce.deployment.host }}"

- name: Connect to "{{ inventory_hostname }}" and get a token
  uri:
    url: https://{{ inventory_hostname }}/api/session
    method: POST
    status_code: 201
    validate_certs: no
    headers:
    user: "{{ vce.admin_username }}"
    password: "{{ vce.admin_password }}"
    force_basic_auth: yes
  until: vce_session.status == 201 and vce_session.vmware_api_session_id is defined
  retries: 100
  delay: 15
  register: vce_session
  delegate_to: "{{ vce.deployment.host }}"

- name: Wait, that "{{ inventory_hostname }}" load is green
  uri:
    url: https://{{ inventory_hostname }}/api/appliance/health/load
    method: GET
    status_code: 200
    validate_certs: no
    headers:
      vmware-api-session-id:  "{{ vce_session.vmware_api_session_id }}"
  until: vce_health_load.status == 200 and vce_health_load.json == "green"
  retries: 100
  delay: 15
  register: vce_health_load
  delegate_to: "{{ vce.deployment.host }}"


- name: Wait, that "{{ inventory_hostname }}" applmgmt is green
  uri:
    url: https://{{ inventory_hostname }}/api/appliance/health/applmgmt
    method: GET
    status_code: 200
    validate_certs: no
    headers:
      vmware-api-session-id:  "{{ vce_session.vmware_api_session_id }}"
  until: vce_health_applmgmt.status == 200 and vce_health_applmgmt.json == "green"
  retries: 100
  delay: 15
  register: vce_health_applmgmt
  delegate_to: "{{ vce.deployment.host }}"

- name: Wait, that "{{ inventory_hostname }}" system is green
  uri:
    url: https://{{ inventory_hostname }}/api/appliance/health/system
    method: GET
    status_code: 200
    validate_certs: no
    headers:
      vmware-api-session-id:  "{{ vce_session.vmware_api_session_id }}"
  until: vce_health_system.status == 200 and vce_health_system.json == "green"
  retries: 100
  delay: 15
  register: vce_health_system
  delegate_to: "{{ vce.deployment.host }}"

- name: Wait, that "{{ inventory_hostname }}" /api/vcenter/datacenter is available
  uri:
    url: https://{{ inventory_hostname }}/api/vcenter/datacenter
    method: GET
    status_code: 200
    validate_certs: no
    headers:
      vmware-api-session-id:  "{{ vce_session.vmware_api_session_id }}"
  until: vce_health_datacenter.status == 200
  retries: 100
  delay: 15
  register: vce_health_datacenter
  delegate_to: "{{ vce.deployment.host }}"
